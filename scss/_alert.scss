//
// Base styles
//

.alert {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  @include border-radius($alert-border-radius);
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}


// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: $alert-dismissible-padding-r;

  // Adjust close link position
  .btn-close {
    position: absolute;
    top: 0;
    right: 0;
    z-index: $stretched-link-z-index + 1;
    padding: $alert-padding-y * 1.25 $alert-padding-x;
  }
}


// scss-docs-start alert-modifiers
// Generate contextual modifier classes for colorizing the alert.

@each $state, $map in $alert-variants {
  $background: var(--#{$variable-prefix}alert-#{$state}-bg, map-get($map, "background"));
  $border: var(--#{$variable-prefix}alert-#{$state}-border-color, map-get($map, "border"));
  $color: var(--#{$variable-prefix}alert-#{$state}-color, map-get($map, "color"));
  $link-color: var(--#{$variable-prefix}alert-#{$state}-link-color, map-get($map, "link-color"));
  // TODO: refactor
  @if ($enable-contrast-ratio-correction and contrast-ratio(map-get($map, "background"), map-get($map, "color")) < $min-contrast-ratio) {
    @if $enable-contrast-ratio-warnings {
      @warn "Alert #{$state} contrast ratio #{contrast-ratio(map-get($map, "background"), map-get($map, "color"))}.";
    }
    $color: var(--#{$variable-prefix}alert-#{$state}-color, mix(map-get($map, "color"), color-contrast(map-get($map, "background")), abs($alert-color-scale)));
  }
  .alert-#{$state} {
    @include alert-variant($background, $border, $color, $link-color);
  }
}
// scss-docs-end alert-modifiers
